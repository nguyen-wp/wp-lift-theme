.form-control {
	display: block;
	width: 100%;
	padding: $input-padding-y $input-padding-x;
	font-family: $input-font-family;
	@include font-size($input-font-size);
	font-weight: $input-font-weight;
	line-height: $input-line-height;
	color: $input-color;
	background-color: $input-bg;
	background-clip: padding-box;
	border: $input-border-width solid $input-border-color;
	appearance: none; // Fix appearance for date inputs in Safari
  
	// Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
	@include border-radius($input-border-radius, 0);
  
	@include box-shadow($input-box-shadow);
	@include transition($input-transition);
  
	&[type="file"] {
	  overflow: hidden; // prevent pseudo element button overlap
  
	  &:not(:disabled):not([readonly]) {
		cursor: pointer;
	  }
	}
  
	// Customize the `:focus` state to imitate native WebKit styles.
	&:focus {
	  color: $input-focus-color;
	  background-color: $input-focus-bg;
	  border-color: $input-focus-border-color;
	  outline: 0;
	  @if $enable-shadows {
		@include box-shadow($input-box-shadow, $input-focus-box-shadow);
	  } @else {
		// Avoid using mixin so we can pass custom focus shadow properly
		box-shadow: $input-focus-box-shadow;
	  }
	}
  
	// Add some height to date inputs on iOS
	// https://github.com/twbs/bootstrap/issues/23307
	// TODO: we can remove this workaround once https://bugs.webkit.org/show_bug.cgi?id=198959 is resolved
	&::-webkit-date-and-time-value {
	  // Multiply line-height by 1em if it has no unit
	  height: if(unit($input-line-height) == "", $input-line-height * 1em, $input-line-height);
	}
  
	// Placeholder
	&::placeholder {
	  color: $input-placeholder-color;
	  // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
	  opacity: 1;
	}
  
	// Disabled and read-only inputs
	//
	// HTML5 says that controls under a fieldset > legend:first-child won't be
	// disabled if the fieldset is disabled. Due to implementation difficulty, we
	// don't honor that edge case; we style them as disabled anyway.
	&:disabled,
	&[readonly] {
	  background-color: $input-disabled-bg;
	  border-color: $input-disabled-border-color;
	  // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
	  opacity: 1;
	}
  
	// File input buttons theming
	&::file-selector-button {
	  padding: $input-padding-y $input-padding-x;
	  margin: (-$input-padding-y) (-$input-padding-x);
	  margin-inline-end: $input-padding-x;
	  color: $form-file-button-color;
	  @include gradient-bg($form-file-button-bg);
	  pointer-events: none;
	  border-color: inherit;
	  border-style: solid;
	  border-width: 0;
	  border-inline-end-width: $input-border-width;
	  border-radius: 0; // stylelint-disable-line property-disallowed-list
	  @include transition($btn-transition);
	}
  
	&:hover:not(:disabled):not([readonly])::file-selector-button {
	  background-color: $form-file-button-hover-bg;
	}
  
	&::-webkit-file-upload-button {
	  padding: $input-padding-y $input-padding-x;
	  margin: (-$input-padding-y) (-$input-padding-x);
	  margin-inline-end: $input-padding-x;
	  color: $form-file-button-color;
	  @include gradient-bg($form-file-button-bg);
	  pointer-events: none;
	  border-color: inherit;
	  border-style: solid;
	  border-width: 0;
	  border-inline-end-width: $input-border-width;
	  border-radius: 0; // stylelint-disable-line property-disallowed-list
	  @include transition($btn-transition);
	}
  
	&:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {
	  background-color: $form-file-button-hover-bg;
	}
  }
  
  // Readonly controls as plain text
  //
  // Apply class to a readonly input to make it appear like regular plain
  // text (without any border, background color, focus indicator)
  
  .form-control-plaintext {
	display: block;
	width: 100%;
	padding: $input-padding-y 0;
	margin-bottom: 0; // match inputs if this class comes on inputs with default margins
	line-height: $input-line-height;
	color: $input-plaintext-color;
	background-color: transparent;
	border: solid transparent;
	border-width: $input-border-width 0;
  
	&.form-control-sm,
	&.form-control-lg {
	  padding-right: 0;
	  padding-left: 0;
	}
  }
  
  // Form control sizing
  //
  // Build on `.form-control` with modifier classes to decrease or increase the
  // height and font-size of form controls.
  //
  // Repeated in `_input_group.scss` to avoid Sass extend issues.
  
  .form-control-sm {
	min-height: $input-height-sm;
	padding: $input-padding-y-sm $input-padding-x-sm;
	@include font-size($input-font-size-sm);
	@include border-radius($input-border-radius-sm);
  
	&::file-selector-button {
	  padding: $input-padding-y-sm $input-padding-x-sm;
	  margin: (-$input-padding-y-sm) (-$input-padding-x-sm);
	  margin-inline-end: $input-padding-x-sm;
	}
  
	&::-webkit-file-upload-button {
	  padding: $input-padding-y-sm $input-padding-x-sm;
	  margin: (-$input-padding-y-sm) (-$input-padding-x-sm);
	  margin-inline-end: $input-padding-x-sm;
	}
  }
  
  .form-control-lg {
	min-height: $input-height-lg;
	padding: $input-padding-y-lg $input-padding-x-lg;
	@include font-size($input-font-size-lg);
	@include border-radius($input-border-radius-lg);
  
	&::file-selector-button {
	  padding: $input-padding-y-lg $input-padding-x-lg;
	  margin: (-$input-padding-y-lg) (-$input-padding-x-lg);
	  margin-inline-end: $input-padding-x-lg;
	}
  
	&::-webkit-file-upload-button {
	  padding: $input-padding-y-lg $input-padding-x-lg;
	  margin: (-$input-padding-y-lg) (-$input-padding-x-lg);
	  margin-inline-end: $input-padding-x-lg;
	}
  }
  
  // Make sure textareas don't shrink too much when resized
  // https://github.com/twbs/bootstrap/pull/29124
  // stylelint-disable selector-no-qualifying-type
  textarea {
	&.form-control {
	  min-height: $input-height;
	}
  
	&.form-control-sm {
	  min-height: $input-height-sm;
	}
  
	&.form-control-lg {
	  min-height: $input-height-lg;
	}
  }
  // stylelint-enable selector-no-qualifying-type
  
  .form-control-color {
	max-width: 3rem;
	height: auto; // Override fixed browser height
	padding: $input-padding-y;
  
	&:not(:disabled):not([readonly]) {
	  cursor: pointer;
	}
  
	&::-moz-color-swatch {
	  height: if(unit($input-line-height) == "", $input-line-height * 1em, $input-line-height);
	  @include border-radius($input-border-radius);
	}
  
	&::-webkit-color-swatch {
	  height: if(unit($input-line-height) == "", $input-line-height * 1em, $input-line-height);
	  @include border-radius($input-border-radius);
	}
  }
  


.btn {
	display: inline-block;
	font-family: $btn-font-family;
	font-weight: $btn-font-weight;
	line-height: $btn-line-height;
	color: $white;
	text-align: center;
	text-decoration: if($link-decoration == none, null, none);
	white-space: $btn-white-space;
	vertical-align: middle;
	cursor: if($enable-button-pointers, pointer, null);
	user-select: none;
	background-color: $blue;
	border: $btn-border-width solid $blue;
	@include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-border-radius);
	@include transition($btn-transition);
  
	&:hover {
	  color: $white;
	  background-color: $blue;
	  text-decoration: if($link-hover-decoration == underline, none, null);
	}
  
	.btn-check:focus + &,
	&:focus {
	color: $white;
		outline: 0;
	  background-color: $blue;
	  box-shadow: $btn-focus-box-shadow;
	}
  
	.btn-check:checked + &,
	.btn-check:active + &,
	&:active,
	&.active {
	  @include box-shadow($btn-active-box-shadow);
	  color: $white;
	  background-color: $blue;
  
	  &:focus {
		@include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
		color: $white;
	  background-color: $blue;
	  }
	}
  
	&:disabled,
	&.disabled,
	fieldset:disabled & {
	  pointer-events: none;
	  opacity: $btn-disabled-opacity;
	  @include box-shadow(none);
	}
  }  



  .form-select, select {
	display: block;
	width: 100%;
	padding: $form-select-padding-y $form-select-indicator-padding $form-select-padding-y $form-select-padding-x;
	// stylelint-disable-next-line property-no-vendor-prefix
	-moz-padding-start: subtract($form-select-padding-x, 3px); // See https://github.com/twbs/bootstrap/issues/32636
	font-family: $form-select-font-family;
	@include font-size($form-select-font-size);
	font-weight: $form-select-font-weight;
	line-height: $form-select-line-height;
	color: $form-select-color;
	background-color: $form-select-bg;
	background-image: escape-svg($form-select-indicator);
	background-repeat: no-repeat;
	background-position: $form-select-bg-position;
	background-size: $form-select-bg-size;
	border: $form-select-border-width solid $form-select-border-color;
	@include border-radius($form-select-border-radius, 0);
	@include box-shadow($form-select-box-shadow);
	@include transition($form-select-transition);
	appearance: none;
  
	&:focus {
	  border-color: $form-select-focus-border-color;
	  outline: 0;
	  @if $enable-shadows {
		@include box-shadow($form-select-box-shadow, $form-select-focus-box-shadow);
	  } @else {
		// Avoid using mixin so we can pass custom focus shadow properly
		box-shadow: $form-select-focus-box-shadow;
	  }
	}
  
	&[multiple],
	&[size]:not([size="1"]) {
	  padding-right: $form-select-padding-x;
	  background-image: none;
	}
  
	&:disabled {
	  color: $form-select-disabled-color;
	  background-color: $form-select-disabled-bg;
	  border-color: $form-select-disabled-border-color;
	}
  
	// Remove outline from select box in FF
	&:-moz-focusring {
	  color: transparent;
	  text-shadow: 0 0 0 $form-select-color;
	}
  }
  
  .form-select-sm {
	padding-top: $form-select-padding-y-sm;
	padding-bottom: $form-select-padding-y-sm;
	padding-left: $form-select-padding-x-sm;
	@include font-size($form-select-font-size-sm);
  }
  
  .form-select-lg {
	padding-top: $form-select-padding-y-lg;
	padding-bottom: $form-select-padding-y-lg;
	padding-left: $form-select-padding-x-lg;
	@include font-size($form-select-font-size-lg);
  }
  